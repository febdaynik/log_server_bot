from typing import Union

from aiogram import Router, F
from aiogram.filters.command import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from bot.database.models import Server, ServerAccess
from bot.keyboards.default import start_markup
from bot.middlewares import DisconnectServerState

router = Router()
router.callback_query.outer_middleware(DisconnectServerState())


async def template_send_welcome(message: Union[Message, CallbackQuery]):
    servers = Server.select().join(ServerAccess).where(ServerAccess.user_id == message.from_user.id)

    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö\n\n"
        f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤:</b> {len(servers)} —à—Ç.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>\"‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä\"</b>, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∂–µ–ª–∞–µ–º—ã–π"
    )

    reply_markup = start_markup(servers=servers)

    if isinstance(message, CallbackQuery):
        return await message.message.edit_text(text=text, reply_markup=reply_markup)

    return await message.answer(text=text, reply_markup=reply_markup)


@router.message(CommandStart())
async def send_welcome(message: Message, state: FSMContext):
    """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –Ω–∞ —Å–ª—É—á–∞–π
    """
    await state.clear()
    return await template_send_welcome(message)


@router.callback_query(F.data == "menu:start")
async def send_welcome_callback(message: Message, state: FSMContext):
    await state.clear()
    return await template_send_welcome(message)
